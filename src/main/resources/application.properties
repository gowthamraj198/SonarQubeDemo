#server.port=8081
#spring.datasource.url=jdbc:h2:file:~/test
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#
#spring.jpa.generate-ddl=true
## Enabling H2 Console
#spring.h2.console.enabled=true
#
## create database schema from SQL files
#spring.jpa.hibernate.ddl-auto=none
#


server.port=8081
spring.jpa.generate-ddl=true


spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults: false

flyway.user=${JDBC_DATABASE_USERNAME}
flyway.password=${JDBC_DATABASE_PASSWORD}
flyway.schemas=test_db
flyway.url=${JDBC_DATABASE_URL}
flyway.locations=filepath:db/migration
spring.flyway.baselineOnMigrate=true